/**
 * Created by idoco on 29/1/2016.
 * buttons logic
 */

var Github = require("github-api");

var Entry = require("./Entry");

function Controller() {

    var github, mainRepo, forkedRepo,
        username, entry, onPullRequestReady,
        retries = 10;

    function refreshMap() {
        var iFrame = document.getElementById("mapFrame");
        //noinspection SillyAssignmentJS
        iFrame.src = iFrame.src;
    }

    function postNewEntry(data) {
        github = new Github({
            username: data.username,
            password: data.password,
            auth: "basic"
        });

        username = data.username;
        entry = data.entry;
        onPullRequestReady = data.callback;

        try {
            Entry.validateEntry(entry);
        } catch (e) {
            return reportError(e);
        }

        mainRepo = github.getRepo("idoco", "GeoJsonHack");
        mainRepo.fork(function (err) {
            if (err) return reportError(err);
            pollForFork(data);
        });
    }

    function pollForFork() {
        forkedRepo = github.getRepo(username, "GeoJsonHack");

        forkedRepo.contents('gh-pages', "map.geojson",
            function (err) {
                if (err && retries) {
                    console.error(err);
                    retries--;
                    setTimeout(pollForFork, 100);
                } else if (err) {
                    return reportError(err);
                } else {
                    readMapFile();
                }
            }
        );
    }

    function readMapFile() {
        mainRepo.read('gh-pages', 'map.geojson',
            function (err, geojson) {
                if (err) return reportError(err);
                editMapFile(geojson);
            }
        );
    }

    function editMapFile(geojson) {
        geojson.features.push(entry);

        var options = {
            committer: {name: username, email: username + '@unknown.com'},
            encode: true // Whether to base64 encode the file. (default: true)
        };

        forkedRepo.write('gh-pages', 'map.geojson', JSON.stringify(geojson, null, 4), 'Adding entry to map', options,
            function (err) {
                if (err) return reportError(err);
                createPullRequest();
            }
        );
    }

    function createPullRequest() {
        var pull = {
            title:  "New entries by " + username,
            body:   "This pull request has been automatically generated by Github.js",
            base:   "gh-pages",
            head:   username + ":" + "gh-pages"
        };

        mainRepo.createPullRequest(pull,
            function (err, pullRequest) {
                if (err) return reportError(err);
                onPullRequestReady({pullRequestUrl: pullRequest.html_url});
            }
        );
    }

    function reportError(err){
        console.error(err);
        if (err && err.request && err.request.responseText){
            try {
                var responseText = JSON.parse(err.request.responseText);
                if (responseText.errors && responseText.errors[0] && responseText.errors[0].message) {
                    onPullRequestReady({err: "" +  responseText.errors[0].message});
                } else {
                    onPullRequestReady({err: "" +  responseText.message});
                }
            } catch (e) {
                onPullRequestReady({err: "" + err.request.responseText});
            }
        } else {
            onPullRequestReady({err: ""+err});
        }
    }

    return {
        refreshMap: refreshMap,
        postNewEntry: postNewEntry
    }
}

module.exports = Controller;

